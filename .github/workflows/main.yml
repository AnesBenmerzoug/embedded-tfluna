name: Main CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - "**/README.md"
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  code-checks:
    name: Code Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action:
          - command: build
            args: --release
          - command: fmt
            args: --all -- --check
          - command: clippy
            args: --all-features --workspace -- -D warnings
          - command: doc
            args: --all-features
          - command: publish
            args: --dry-run
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        id: rust-toolchain
        with:
          components: rust-src, rustfmt, clippy
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.rust-toolchain.outputs.cachekey }}
      - name: Run command 'cargo ${{ matrix.action.command }}''
        run: cargo ${{ matrix.action.command }} ${{ matrix.action.args }}
      
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.rust-toolchain.outputs.cachekey }}
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run tests and generate code coverage
        run: cargo integration-mock-tests-ci


  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [code-checks, tests]
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Cargo login
        run: |-
          echo "${{ secrets.CRATES_IO_API_TOKEN }}" | cargo login
      - name: Cargo Publish
        run: |-
          cargo publish --verbose
      - name: Create GitHub release
        uses: docker://antonyurchenko/git-release:v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
